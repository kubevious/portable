apiVersion: v1
items:
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.kubernetes.io/backends: '{"k8s-be-32348--ab64a690ed0b76be":"UNHEALTHY"}'
      ingress.kubernetes.io/forwarding-rule: k8s-fw-book-book-web-ingress--ab64a690ed0b76be
      ingress.kubernetes.io/target-proxy: k8s-tp-book-book-web-ingress--ab64a690ed0b76be
      ingress.kubernetes.io/url-map: k8s-um-book-book-web-ingress--ab64a690ed0b76be
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"kubernetes.io/ingress.allow-http":"true"},"labels":{"name":"book-web-ingress"},"name":"book-web-ingress","namespace":"book"},"spec":{"backend":{"serviceName":"book-web-svc","servicePort":80},"rules":[{"host":"example.com","http":{"paths":[{"backend":{"serviceName":"book-web-svc","servicePort":80}}]}}]}}
      kubernetes.io/ingress.allow-http: "true"
    creationTimestamp: "2020-01-11T21:42:31Z"
    generation: 1
    labels:
      name: book-web-ingress
    name: book-web-ingress
    namespace: book
    resourceVersion: "20288851"
    selfLink: /apis/extensions/v1beta1/namespaces/book/ingresses/book-web-ingress
    uid: 452bcf4c-34bb-11ea-9cdc-42010a8001cf
  spec:
    backend:
      serviceName: book-web-svc
      servicePort: 80
    rules:
    - host: example.com
      http:
        paths:
        - backend:
            serviceName: book-web-svc
            servicePort: 80
  status:
    loadBalancer:
      ingress:
      - ip: 34.107.196.144
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      certmanager.k8s.io/issuer: gitlab-issuer
      kubernetes.io/ingress.class: gitlab-nginx
      kubernetes.io/ingress.provider: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/proxy-buffering: "off"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "900"
      nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    creationTimestamp: "2020-01-18T00:43:53Z"
    generation: 1
    labels:
      app: minio
      chart: minio-0.4.3
      heritage: Helm
      release: gitlab
    name: gitlab-minio
    namespace: gitlab
    resourceVersion: "2017093"
    selfLink: /apis/extensions/v1beta1/namespaces/gitlab/ingresses/gitlab-minio
    uid: 99c870e3-398b-11ea-b115-42010a8001d6
  spec:
    rules:
    - host: minio.example.com
      http:
        paths:
        - backend:
            serviceName: gitlab-minio-svc
            servicePort: 9000
          path: /
    tls:
    - hosts:
      - minio.example.com
      secretName: gitlab-minio-tls
  status:
    loadBalancer:
      ingress:
      - ip: 35.192.33.224
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      certmanager.k8s.io/issuer: gitlab-issuer
      kubernetes.io/ingress.class: gitlab-nginx
      kubernetes.io/ingress.provider: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/proxy-buffering: "off"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "900"
      nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    creationTimestamp: "2020-01-18T00:43:53Z"
    generation: 1
    labels:
      app: registry
      chart: registry-0.3.0
      heritage: Helm
      release: gitlab
    name: gitlab-registry
    namespace: gitlab
    resourceVersion: "2017091"
    selfLink: /apis/extensions/v1beta1/namespaces/gitlab/ingresses/gitlab-registry
    uid: 99c93e27-398b-11ea-b115-42010a8001d6
  spec:
    rules:
    - host: registry.example.com
      http:
        paths:
        - backend:
            serviceName: gitlab-registry
            servicePort: 5000
          path: /
    tls:
    - hosts:
      - registry.example.com
      secretName: gitlab-registry-tls
  status:
    loadBalancer:
      ingress:
      - ip: 35.192.33.224
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      certmanager.k8s.io/issuer: gitlab-issuer
      kubernetes.io/ingress.class: gitlab-nginx
      kubernetes.io/ingress.provider: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: 512m
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "15"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    creationTimestamp: "2020-01-18T00:43:53Z"
    generation: 1
    labels:
      app: unicorn
      chart: unicorn-2.6.5
      heritage: Helm
      release: gitlab
    name: gitlab-unicorn
    namespace: gitlab
    resourceVersion: "2017092"
    selfLink: /apis/extensions/v1beta1/namespaces/gitlab/ingresses/gitlab-unicorn
    uid: 99c98068-398b-11ea-b115-42010a8001d6
  spec:
    rules:
    - host: gitlab.example.com
      http:
        paths:
        - backend:
            serviceName: gitlab-unicorn
            servicePort: 8181
          path: /
        - backend:
            serviceName: gitlab-unicorn
            servicePort: 8080
          path: /admin/sidekiq
    tls:
    - hosts:
      - gitlab.example.com
      secretName: gitlab-gitlab-tls
  status:
    loadBalancer:
      ingress:
      - ip: 35.192.33.224
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.gcp.kubernetes.io/pre-shared-cert: mcrt-c2644db5-4590-42be-8d97-544f25635953
      ingress.kubernetes.io/backends: '{"k8s-be-31248--ab64a690ed0b76be":"HEALTHY","k8s-be-31689--ab64a690ed0b76be":"HEALTHY"}'
      ingress.kubernetes.io/forwarding-rule: k8s-fw-kubevious-kubevious--ab64a690ed0b76be
      ingress.kubernetes.io/https-forwarding-rule: k8s-fws-kubevious-kubevious--ab64a690ed0b76be
      ingress.kubernetes.io/https-target-proxy: k8s-tps-kubevious-kubevious--ab64a690ed0b76be
      ingress.kubernetes.io/ssl-cert: mcrt-c2644db5-4590-42be-8d97-544f25635953
      ingress.kubernetes.io/target-proxy: k8s-tp-kubevious-kubevious--ab64a690ed0b76be
      ingress.kubernetes.io/url-map: k8s-um-kubevious-kubevious--ab64a690ed0b76be
      kubernetes.io/ingress.allow-http: "true"
      kubernetes.io/ingress.global-static-ip-name: kubevious-ui
      networking.gke.io/managed-certificates: kubevious-certificate
    creationTimestamp: "2020-03-27T23:06:16Z"
    generation: 10
    labels:
      k8s-app: kubevious
    name: kubevious
    namespace: kubevious
    resourceVersion: "36478038"
    selfLink: /apis/extensions/v1beta1/namespaces/kubevious/ingresses/kubevious
    uid: 8fa9c348-707f-11ea-8ebf-42010a800207
  spec:
    rules:
    - host: demo.kubevious.io
      http:
        paths:
        - backend:
            serviceName: kubevious-ui-svc
            servicePort: 3000
  status:
    loadBalancer:
      ingress:
      - ip: 34.107.207.168
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubernetes.io/ingress.class: nginx
    creationTimestamp: "2020-01-18T00:06:15Z"
    generation: 1
    labels:
      app: openfaas
      chart: openfaas-5.4.1
      heritage: Helm
      release: openfaas
    name: openfaas-ingress
    namespace: openfaas
    resourceVersion: "2007256"
    selfLink: /apis/extensions/v1beta1/namespaces/openfaas/ingresses/openfaas-ingress
    uid: 585170df-3986-11ea-b115-42010a8001d6
  spec:
    rules:
    - host: gateway.openfaas.local
      http:
        paths:
        - backend:
            serviceName: gateway
            servicePort: 8080
          path: /
  status:
    loadBalancer: {}
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
